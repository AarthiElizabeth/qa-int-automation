name: CI Pipeline with Qase Integration

on:
  push:
    branches: [ main, master ]
    paths:
      - '**.go'
      - 'config/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  GO_VERSION: '1.21'
  QASE_RUN_NAME: 'Automated Tests - ${{ github.sha }}'
  QASE_ENV_SLUG: 'qa-int'

jobs:
  test:
    name: Test and Report
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Sync Test Cases to Qase
      env:
        QASE_API_TOKEN: ${{ secrets.QASE_API_TOKEN }}
        QASE_PROJECT_CODE: ${{ secrets.QASE_PROJECT_CODE }}
      run: go run main.go -sync-only

    - name: Create Qase Test Run
      id: create-run
      uses: qase-tms/gh-actions/run-create@v1
      with:
        token: ${{ secrets.QASE_API_TOKEN }}
        project: ${{ secrets.QASE_PROJECT_CODE }}
        title: ${{ env.QASE_RUN_NAME }}
        environment: ${{ env.QASE_ENV_SLUG }}

    - name: Run Tests
      run: |
        go mod tidy
        go run main.go
        mkdir -p results && touch results/test-results.xml  # Replace with real output

    - name: Upload to Qase
      uses: qase-tms/gh-actions/report@v1
      with:
        token: ${{ secrets.QASE_API_TOKEN }}
        project: ${{ secrets.QASE_PROJECT_CODE }}
        id: ${{ steps.create-run.outputs.id }}
        format: junit
        path: results/test-results.xml

    - name: Complete Qase Run
      if: always()
      uses: qase-tms/gh-actions/run-complete@v1
      with:
        token: ${{ secrets.QASE_API_TOKEN }}
        project: ${{ secrets.QASE_PROJECT_CODE }}
        id: ${{ steps.create-run.outputs.id }}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ github.run_id }}
        path: results/
        retention-days: 7
